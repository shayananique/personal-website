<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows Phone on Shayan Anique</title><link>https://shayananique.com/categories/windows-phone/</link><description>Recent content in Windows Phone on Shayan Anique</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 20 Jun 2012 04:57:00 +0000</lastBuildDate><atom:link href="https://shayananique.com/categories/windows-phone/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows Phone 8 Announced</title><link>https://shayananique.com/posts/2012-06-20-windows-phone-8-announced-big-roll-up-in-the-tech-industry/</link><pubDate>Wed, 20 Jun 2012 04:57:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-06-20-windows-phone-8-announced-big-roll-up-in-the-tech-industry/</guid><description>Today at Windows Phone Summit Microsoft announced there upcoming version of Windows Phone known as Windows Phone 8 Codename “Apollo”. This OS will be successor to previous Windows Phone 7 series as it contains biggest improvements that everybody wanted. The Windows Phone 8 announcement was aimed largely at Microsoft’s ecosystem of developers and hardware partners, and somewhat at potential enterprise customers, more so than at smartphone consumers. While the company’s executives revealed several end-user and consumer features–like the Wallet Hub, a new Start screen, upgraded hardware support (including support for NFC)–the major news revolved around the operating system’s revamped kernel, which it now shares as common code with Windows 8.</description><content>&lt;p>Today at Windows Phone Summit Microsoft announced there upcoming version of Windows Phone known as Windows Phone 8 Codename “Apollo”. This OS will be successor to previous Windows Phone 7 series as it contains biggest improvements that everybody wanted. The Windows Phone 8 announcement was aimed largely at Microsoft’s ecosystem of developers and hardware partners, and somewhat at potential enterprise customers, more so than at smartphone consumers. While the company’s executives revealed several end-user and consumer features–like the Wallet Hub, a new Start screen, upgraded hardware support (including support for NFC)–the major news revolved around the operating system’s revamped kernel, which it now shares as common code with Windows 8.&lt;/p>
&lt;p>They added some new features like SD Card Support, Near Field Communication Sensor “NFC” Developers can make applications and games which depends upon native code.&lt;/p>
&lt;p>Here’s some shots of Windows Phone 8&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->Developers will be able to download Windows Phone 8 SDK at this summer.&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>TCP-based sockets on Windows Phone with support for large amounts of data</title><link>https://shayananique.com/posts/2012-03-25-tcp-based-sockets-on-windows-phone-with-support-for-large-amounts-of-data/</link><pubDate>Sun, 25 Mar 2012 21:49:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-03-25-tcp-based-sockets-on-windows-phone-with-support-for-large-amounts-of-data/</guid><description>Network communication through sockets is a welcome addition to the Windows Phone platform. Personally, I enjoy using those because of the tremendous performance gain compared to WCF services. One topic, however, seems to be rarely covered when it comes to TCP-based communication between the server (presumably running on a desktop machine) and the client (Windows Phone) = transmission of large amounts of data.
A lot of existing samples assume that the communication, although bi-directional, is done with small data units.</description><content>&lt;p>Network communication through sockets is a welcome addition to the Windows Phone platform. Personally, I enjoy using those because of the tremendous performance gain compared to WCF services. One topic, however, seems to be rarely covered when it comes to TCP-based communication between the server (presumably running on a desktop machine) and the client (Windows Phone) = transmission of large amounts of data.&lt;/p>
&lt;p>A lot of existing samples assume that the communication, although bi-directional, is done with small data units. For example, &lt;a href="http://msdn.microsoft.com/en-us/library/5w7b7x5f.aspx">here is a pretty good sample&lt;/a> that I used to build the asynchronous server. The reading callback looks like this:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>It works perfectly fine on the desktop machine. I am also adding a terminator verification statement that allows me to check whether the whole data set was received:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Although seemingly simple, the data receiving process on a Windows Phone is handled in a different manner. There is no direct implementation of&lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.beginreceive.aspx">Socket.BeginReceive&lt;/a>. Instead, developers work with &lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.receiveasync(v=vs.95).aspx">Socket.ReceiveAsync&lt;/a>. Many samples give you this piece of code:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Notice the problem with this snippet. Once the string is received, that will be it. The inbound data length will be limited to the size of the buffer, and the maximum chunk size. The buffer size cannot always be fixed, and it is safe to assume that the developer does not want to allocate too much space for that in one iteration. The default socket chuck size cannot always be accommodated either.&lt;/p>
&lt;p>The resolution comes in a continuous invocation of &lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.receiveasync(v=vs.95).aspx">Socket.ReceiveAsync&lt;/a>:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Here is where the terminator character plays a major role. Look at** &lt;em>if (dataFromServer.EndsWith(terminator)) –&lt;/em>** that is the flag that shows whether more data is coming or not. With a receiving structure like I showed above, it is possible to keep receiving data until the connection is closed (happens all the time) or the terminator character is detected.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>NOTE:&lt;/strong> If you are wondering what terminator character to use, try going with non-standard ones. For example, &lt;em>&lt;strong>\u00BE&lt;/strong>.&lt;/em> Otherwise, chances are that the actual “terminator” is not the terminating character.&lt;/p>
&lt;/blockquote></content></item><item><title>Matchem Poker: A Great Poker Game For Your Windows Phone</title><link>https://shayananique.com/posts/2012-01-04-matchem-poker-a-great-poker-game-for-your-windows-phone-2/</link><pubDate>Wed, 04 Jan 2012 22:58:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-01-04-matchem-poker-a-great-poker-game-for-your-windows-phone-2/</guid><description>I am pleased to announce that my game is called “Match`em Poker”. It is a poker game for Windows Phone 7.5 Codename: Mango and it is now available for free on Windows Phone Market Place. I hope to share a lot of my exciting developing experience on this blog.
On top of being a fully functional, free poker game, I’ve also made sure to address key complaints That I heard from people regarding the previous poker and cards game on market place: the main function of the game, that is general touch responsiveness than any other game present on Market Place.</description><content>&lt;p>I am pleased to announce that my game is called “&lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">Match`em Poker&lt;/a>”. It is a poker game for Windows Phone 7.5 Codename: Mango and it is now available for free on Windows Phone Market Place. I hope to share a lot of my exciting developing experience on this blog.&lt;/p>
&lt;p>On top of being a fully functional, free poker game, I’ve also made sure to address key complaints That I heard from people regarding the previous poker and cards game on market place: the main function of the game, that is general touch responsiveness than any other game present on Market Place.&lt;/p>
&lt;hr>
&lt;hr>
&lt;p>&lt;strong>&lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image002.jpg">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/strong>****&lt;/p>
&lt;p>&lt;strong>“Match`em Poker”&lt;/strong>&lt;/p>
&lt;p>So, my Game is called &lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">Matchem Poker&lt;/a>. Instead of focusing on just raw performance from a development&lt;/p>
&lt;p>standpoint, I wanted to show how I would envision a great Windows Phone Game. I believe that for a v1.0. release, I have delivered a great initial app experience. I decided to try and demonstrate a happy compromise, hoping to yield a wonderful experience that doesn’t take short-cuts.&lt;/p>
&lt;p>· Touch Responsive&lt;/p>
&lt;p>· Great Performance&lt;/p>
&lt;p>· Improved Gestures&lt;/p>
&lt;p>· A Beautiful Experience, yet differentiated enough&lt;/p>
&lt;p>· A emphasis on Design&lt;/p>
&lt;p>(The name? It’s a little odd yet creative. The intersection of poker (Matchem) and the fun of the game This means to match the poker hands).&lt;/p>
&lt;p>An emphasis on design and rich Visuals The design system for Windows Phone, code-named “Metro”, really is cool. Others have written about the experience before, but it really is a very developer-friendly design system that is crisp, clean, and once you understand the core principles and rules, it’s easy to build jaw-dropping apps. I’m just a geek, but feel I’ve come away with a pretty good first release when it comes to visual consistency and trying to adhere to the basics of “Metro”. This comes through in a few ways. If you look to the screenshots below, on the left, you see the nice visuals in the “Start” listing: no rounded corners, crisp and clean, etc. On the right, the “info” item for a page shows a few large, rich photos from the venue – and clicking them brings up the fullscreen experience.&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image004.jpg">&lt;!-- raw HTML omitted -->&lt;/a>                                             &lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image006.jpg">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>&lt;strong>A fun experience&lt;/strong>&lt;/p>
&lt;p>While Playing the Game the feature you get is that on every level you will get general information on Poker which is quite good.&lt;/p>
&lt;p>&lt;strong>An update with specials is coming soon&lt;/strong>&lt;/p>
&lt;p>Now that the app is out there, an update coming soon will add specials support, and I’ll also work to address any large buckets of customer-reported bugs. Thanks to getting the build out earlier in the week for people with developer unlocked phones, I’ve been able to start identifying a few small bugs and issues that I hope to correct soon (thanks everyone).&lt;/p>
&lt;hr>
&lt;p>&lt;strong>From a Blank Visual Studio Project…. &amp;lt;90 Days&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>I have created a visual studio project few months before purchasing my windows phone I have completed building and coding my game the thing which last is to test on actual windows phone 7 device the advantage of this is that you will not need to worry about any objection from Windows Phone Marketplace team you can review your and fix all the bugs you found during debugging on a device although, you can run it on emulator but many features would not work on it.&lt;/p>
&lt;p>Finally I got my windows phone (HTC HD 7) and I am very happy after that I registered a domain &lt;a href="http://www.shayananique.com">shayananique.com&lt;/a> and added everything about my game on my blog I have also previously mentioned about my Invasion (game for windows phone) on my blog.&lt;/p>
&lt;p>Most development happened in spurts as I found a free Sunday afternoon or a clear night or two. I’m Really glad that I was able to the have the opportunity to build a feature-complete WP app and that Microsoft is open to this kind of project as appropriate.&lt;/p>
&lt;p>So, check out the site and &lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">download&lt;/a> the app from marketplace if you’re into Windows Phone&lt;/p></content></item><item><title>MPNS module for Node: A simple push notification helper for the cloud</title><link>https://shayananique.com/posts/2011-12-28-mpns-module-for-node-a-simple-push-notification-helper-for-the-cloud/</link><pubDate>Wed, 28 Dec 2011 08:32:13 +0000</pubDate><guid>https://shayananique.com/posts/2011-12-28-mpns-module-for-node-a-simple-push-notification-helper-for-the-cloud/</guid><description>One of the fun projects I’ve been working on recently related to my app has been bringing online a cloud to handle sending push notifications processing. I’m using Node.js for this and have a ton of people enjoying the beta push experience right now: toasts, live tiles, etc.
Tonight I pushed to GitHub ‘mpns’, a simple interface and helper to the Microsoft Push Notification Service (MPNS). It essentially takes the simple properties for your live tile update or toast, packages it in a simple XML payload, and then posts it to the subscription endpoint.</description><content>&lt;p>One of the fun projects I’ve been working on recently related to my app has been bringing online a cloud to handle sending push notifications processing. I’m using &lt;a href="http://nodejs.org/">Node.js&lt;/a> for this and have a ton of people enjoying the beta push experience right now: toasts, live tiles, etc.&lt;/p>
&lt;p>Tonight I pushed to GitHub ‘mpns’, a simple interface and helper to the Microsoft Push Notification Service (MPNS). It essentially takes the simple properties for your live tile update or toast, packages it in a simple XML payload, and then posts it to the subscription endpoint.&lt;/p>
&lt;p>It isn’t a lot of code, but I sure hope it helps others who may be experimenting with other platforms while building a great push experience. If you’re using Azure, the Windows Phone team has already provided some awesome content here – &lt;a href="http://windowsteamblog.com/windows_phone/b/wpdev/archive/2011/01/14/windows-push-notification-server-side-helper-library.aspx">Yochay has previously posted&lt;/a> about a &lt;a href="http://create.msdn.com/en-us/education/catalog/article/pnhelp-wp7">Windows Push Notification Server Side Helper Library&lt;/a>.&lt;/p></content></item></channel></rss>