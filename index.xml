<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shayan Anique</title><link>https://shayananique.com/</link><description>Recent content on Shayan Anique</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Apr 2021 01:34:00 +0000</lastBuildDate><atom:link href="https://shayananique.com/index.xml" rel="self" type="application/rss+xml"/><item><title>HTTPS with LetsEncrypt for Azure Functions</title><link>https://shayananique.com/posts/2021-04-14-https-for-azure-functions/</link><pubDate>Wed, 14 Apr 2021 01:34:00 +0000</pubDate><guid>https://shayananique.com/posts/2021-04-14-https-for-azure-functions/</guid><description>UPDATE: there might be an easier way now. App Service Managed Certificates now supports apex domains. I&amp;rsquo;ll give it a try and report back.
My friends, in an ideal world, it would be dead simple to set up a certificate for an Azure App Service. For example, GitHub Pages gets this right.
Look at that. A thing of beauty. Just click that checkbox and now your site is being served from HTTPS using a free certificate from LetsEncrypt.</description><content>&lt;p>&lt;em>UPDATE: there might be an easier way now. &lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-app-service-managed-certificates-now-supports-apex-domains/">App Service Managed Certificates now supports apex domains&lt;/a>. I&amp;rsquo;ll give it a try and report back.&lt;/em>&lt;/p>
&lt;p>My friends, in an ideal world, it would be dead simple to set up a certificate for an Azure App Service. For example, GitHub Pages gets this right.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shayananique/shayananique.com/main/assets/images/git_https_customdomain.png" alt="Screen shot showing a checkbox for enforcing HTTPS" title="Could it be any easier?">&lt;/p>
&lt;p>Look at that. A thing of beauty. Just click that checkbox and now your site is being served from HTTPS using a free certificate from LetsEncrypt. From an &lt;em>apex domain&lt;/em> no less!&lt;/p>
&lt;p>But to set up a custom apex domain with HTTPS for an Azure App Service is not so easy. It takes about a hundred steps. That&amp;rsquo;s not that much of an exaggeration.&lt;/p>
&lt;p>For my site, I use the wonderful &lt;a href="https://github.com/ohadschn/letsencrypt-webapp-renewer">ohadschn/letsencrypt-webapp-renewer&lt;/a> tool. Like I said, it takes some time to set up manually, but once you do, it works great.&lt;/p>
&lt;p>This post is not going to walk through that part. For that, I followed &lt;a href="https://weblogs.asp.net/dixin/end-to-end-setup-free-ssl-certificate-to-secure-azure-web-app-with-https">this excellent guide by Dixin&lt;/a>. But be aware, the only constant is change and the Azure Portal embraces that credo. It&amp;rsquo;s changed a lot since this guide was written, so the screenshots may not match exactly what you need to do today, but you should be able to figure it out. Even if you follow the guide, it may be worth reading the README in the original repository.&lt;/p>
&lt;h2 id="azure-functions">Azure Functions&lt;/h2>
&lt;p>Now suppose you want to serve an Azure Function using HTTPS and a LetsEncrypt certificate. To clarify, I&amp;rsquo;m not talking about using an Azure Function to run &lt;code>letsencrypt-webapp-renewer&lt;/code> on a schedule. In fact, if you search Azure Functions and &lt;code>letsencrypt-webapp-renewer&lt;/code>, almost all the results are about that. No, I&amp;rsquo;m talking about being able to access your function via &lt;code>https://your-custom-domain/api/your-function&lt;/code>.&lt;/p>
&lt;p>Since an Azure Function is an App Service under the hood, wouldn&amp;rsquo;t the instructions I mentioned earlier just work?&lt;/p>
&lt;p>You wish. No, Azure Functions are &lt;em>SPECIAL!&lt;/em>&lt;/p>
&lt;p>See, the problem is that LetsEncrypt needs to be able to verify that the domain is under your control. So it&amp;rsquo;s going to make a &lt;code>GET&lt;/code> request to &lt;code>http://your-custom-domain/.well-known/acme-challenge/{some-code}&lt;/code> and expect a certain response. By default, all requests to Azure Functions have the &lt;code>/api&lt;/code> prefix. So we need to do a little magic to get this to work. We need to create a proxy!&lt;/p>
&lt;p>Fortunately, there&amp;rsquo;s &lt;a href="https://github.com/sjkp/letsencrypt-siteextension/wiki/Azure-Functions-Support">a guide for that&lt;/a>. Unfortunately, it&amp;rsquo;s a bit outdated. Also, it doesn&amp;rsquo;t work if your function is controlled via source control. For example, my functions are in GitHub so the Azure Portal won&amp;rsquo;t let me create a proxy in the Azure Portal.&lt;/p>
&lt;p>And here is where I come to save the day. This is what I did to fix the situation.&lt;/p>
&lt;p>First, add a &lt;code>proxies.json&lt;/code> file to your function directory. This is in the same place where your &lt;code>hosts.json&lt;/code> file is located. In your project file, make sure this file is copied to the output directory. I forgot the first time I added this file and it filled me with regret as nothing worked.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;None&lt;/span> &lt;span style="color:#a6e22e">Update=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;proxies.json&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;CopyToOutputDirectory&amp;gt;&lt;/span>PreserveNewest&lt;span style="color:#f92672">&amp;lt;/CopyToOutputDirectory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/None&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Your &lt;code>proxies.json&lt;/code> file should look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;$schema&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://json.schemastore.org/proxies&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;proxies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;letsencrypt-proxy&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;matchCondition&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;route&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/.well-known/acme-challenge/{*rest}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;backendUri&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://%WEBSITE_HOSTNAME%/api/letsencrypt/{rest}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This proxy will route requests to &lt;code>https://your-custom-domain/.well-known/acme-challenge/{*rest}&lt;/code> to &lt;code>https://your-custom-domain/api/letsencrypt/{rest}&lt;/code>.&lt;/p>
&lt;p>Now, you need to add a function class to handle that request.&lt;/p>
&lt;p>Here&amp;rsquo;s the code for mine, adapted from the guide I mentioned.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.IO;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Net;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Net.Http;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Text;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Threading.Tasks;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.AspNetCore.Http;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.WebJobs;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.WebJobs.Extensions.Http;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Extensions.Logging;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> Serious.Abbot.Functions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AcmeChallengeFunction&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [FunctionName(&amp;#34;AcmeChallenge&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> Task&amp;lt;HttpResponseMessage&amp;gt; Run(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [HttpTrigger(AuthorizationLevel.Anonymous, Route = &amp;#34;letsencrypt/{*rest}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpRequest req,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ILogger log,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">string&lt;/span> rest)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.LogInformation(&lt;span style="color:#e6db74">$&amp;#34;Acme challenge requested with {req.Method}.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> content = &lt;span style="color:#66d9ef">await&lt;/span> File.ReadAllTextAsync(&lt;span style="color:#e6db74">$@&amp;#34;D:\home\site\wwwroot\.well-known\acme-challenge\{rest}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> resp = &lt;span style="color:#66d9ef">new&lt;/span> HttpResponseMessage(HttpStatusCode.OK)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content = &lt;span style="color:#66d9ef">new&lt;/span> StringContent(content, Encoding.UTF8, &lt;span style="color:#e6db74">&amp;#34;text/plain&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> resp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commit that, deploy it, and try it out! Now, hopefully the next person that runs into this will find my blog post and not the hundreds of other irrelevant posts, and know what to do.&lt;/p></content></item><item><title>Global Query Filters for Interfaces</title><link>https://shayananique.com/posts/2019-07-29-query-filter-by-interface/</link><pubDate>Mon, 29 Jul 2019 01:34:00 +0000</pubDate><guid>https://shayananique.com/posts/2019-07-29-query-filter-by-interface/</guid><description>This post describes how to apply an Entity Framework Core Global Query filter on all entity types that implement an interface using a strongly typed expression. And why you might want to do that in the first place.
One way to implement a multi-tenant application is to use a discriminator column (aka a tenant_id column on every table). This is a risky proposition. Every query must remember to filter by the tenant_id.</description><content>&lt;p>&lt;em>This post describes how to apply an Entity Framework Core Global Query filter on all entity types that implement an interface using a strongly typed expression. And why you might want to do that in the first place.&lt;/em>&lt;/p>
&lt;p>One way to implement a multi-tenant application is to use a discriminator column (aka a &lt;code>tenant_id&lt;/code> column on every table). This is a risky proposition. Every query must remember to filter by the &lt;code>tenant_id&lt;/code>. One missed query and you expose data from one tenant to another. That&amp;rsquo;ll get you featured in the next &lt;a href="https://www.troyhunt.com/">Troy Hunt&lt;/a> security fail keynote. You don&amp;rsquo;t want that.&lt;/p>
&lt;p>There are other features that can impact every query. For example, to implement soft deletes, you might have a &lt;code>deleted&lt;/code> column on every table. Every query needs to filter on that column.&lt;/p>
&lt;p>This is where the &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/filters">Global Query Filter feature of EF Core 2.0&lt;/a> and above comes in handy. If you use NHibernate, you&amp;rsquo;ve had this feature for a long time.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/19977/61970776-55bc4a80-af92-11e9-9894-a772c6162adf.jpg" alt="Color Filters - by Carlos Ebert - CC BY 2.0" title="Color Filters - by Carlos Ebert - CC BY 2.0">&lt;/p>
&lt;p>Here&amp;rsquo;s a quick example of a query filter in action. First, we start with the class that&amp;rsquo;s used in every example ever, the &lt;code>Post&lt;/code> class. Someday we&amp;rsquo;ll be more creative and create an example other than creating a blog engine. Blog engines is so passé.&lt;/p>
&lt;p>First, let&amp;rsquo;s assume we have a &lt;code>Post&lt;/code> entity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Post&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> Id { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> Content { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> IsDeleted { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We add a query filter to the &lt;code>OnModelCreating&lt;/code> method of a &lt;code>DbContext&lt;/code> derived class.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnModelCreating(ModelBuilder builder)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.Entity&amp;lt;Post&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//... Probably more code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now every time you query for blog posts, the query only includes posts with &lt;code>IsDeleted&lt;/code> set to &lt;code>false&lt;/code>.&lt;/p>
&lt;p>But your blog engine is the talk of the town. It needs more than just posts, it needs comments and tags. Now your set of query filters look like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnModelCreating(ModelBuilder builder)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.Entity&amp;lt;Post&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.Entity&amp;lt;Comment&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.Entity&amp;lt;Tag&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//... Probably more code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Yuck! That&amp;rsquo;s starting to get repetitive. And if you add a new entity, you have to remember to add a query filter for that entity.&lt;/p>
&lt;h2 id="will-interfaces-save-us">Will Interfaces Save Us?&lt;/h2>
&lt;p>But you, you are a smart developer. You see this problem and you think, &amp;ldquo;I know, I&amp;rsquo;ll solve it with an interface!&amp;rdquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">ISoftDeletable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> IsDeleted { &lt;span style="color:#66d9ef">get&lt;/span>; &lt;span style="color:#66d9ef">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you&amp;rsquo;ll make each of your entities implement this interface. And you&amp;rsquo;ll rewrite your query filter like so.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnModelCreating(ModelBuilder builder)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.Entity&amp;lt;ISoftDeletable&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//... Probably more code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you&amp;rsquo;ll be wrong! This won&amp;rsquo;t work because EF infers the table to filter based on the type passed in. EF Core requires a query filter for each entity type. Well, it does for the average developer. But you read this blog, so you are above average and you won&amp;rsquo;t be bound by the limits of mere mortals.&lt;/p>
&lt;h2 id="filtering-by-interface">Filtering by Interface&lt;/h2>
&lt;p>When you set a filter, EF looks at the expression provided and applies it to the entity. For example, in the above example, the expression is &lt;code>p =&amp;gt; !p.IsDeleted&lt;/code> where &lt;code>p&lt;/code> has the type &lt;code>ISoftDeletable&lt;/code>. All we have to do is find every type that implements &lt;code>ISoftDeletable&lt;/code> and rewrite this expression for each type. Specifically, we need to change the parameter type of this expression for each entity type. Sounds easy right? So how do you rewrite an expression?&lt;/p>
&lt;p>Fortunately I found a pretty &lt;a href="https://stackoverflow.com/questions/38316519/replace-parameter-type-in-lambda-expression">good answer on StackOverflow on how to replace the parameter type in a lambda expression&lt;/a>. I had to make some tweaks to use it for my needs, but here&amp;rsquo;s the code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Collections.ObjectModel;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Linq;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Linq.Expressions;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExpressionExtensions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Given an expression for a method that takes in a single parameter (and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// returns a bool), this method converts the parameter type of the parameter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// from TSource to TTarget.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Expression&amp;lt;Func&amp;lt;TTarget, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; Convert&amp;lt;TSource, TTarget&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span> Expression&amp;lt;Func&amp;lt;TSource, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; root)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> visitor = &lt;span style="color:#66d9ef">new&lt;/span> ParameterTypeVisitor&amp;lt;TSource, TTarget&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (Expression&amp;lt;Func&amp;lt;TTarget, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt;)visitor.Visit(root);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ParameterTypeVisitor&lt;/span>&amp;lt;TSource, TTarget&amp;gt; : ExpressionVisitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> ReadOnlyCollection&amp;lt;ParameterExpression&amp;gt; &lt;span style="color:#ae81ff">_&lt;/span>parameters;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> Expression VisitParameter(ParameterExpression node)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">_&lt;/span>parameters?.FirstOrDefault(p =&amp;gt; p.Name == node.Name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ?? (node.Type == &lt;span style="color:#66d9ef">typeof&lt;/span>(TSource) ? Expression.Parameter(&lt;span style="color:#66d9ef">typeof&lt;/span>(TTarget), node.Name): node);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> Expression VisitLambda&amp;lt;T&amp;gt;(Expression&amp;lt;T&amp;gt; node)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">_&lt;/span>parameters = VisitAndConvert&amp;lt;ParameterExpression&amp;gt;(node.Parameters, &lt;span style="color:#e6db74">&amp;#34;VisitLambda&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Expression.Lambda(Visit(node.Body), &lt;span style="color:#ae81ff">_&lt;/span>parameters);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>Convert&lt;/code> method accepts an &lt;code>Expression&amp;lt;Func&amp;lt;TSource, bool&amp;gt;&amp;gt;&lt;/code>. The &lt;code>Func&amp;lt;TSource, bool&amp;gt;&lt;/code> describes a method that receives an argument of type &lt;code>TSource&lt;/code> and returns a &lt;code>bool&lt;/code>. The same signature as a query filter. It then returns an &lt;code>Expression&amp;lt;Func&amp;lt;TTarget, bool&amp;gt;&amp;gt;&lt;/code>.&lt;/p>
&lt;p>This is useful to take our &lt;code>Expression&amp;lt;Func&amp;lt;ISoftDeletable, bool&amp;gt;&amp;gt;&lt;/code> and convert it to &lt;code>Expression&amp;lt;Func&amp;lt;Post, bool&amp;gt;&amp;gt;&lt;/code> and &lt;code>Expression&amp;lt;Func&amp;lt;Comment, bool&amp;gt;&amp;gt;&lt;/code> and so on. Let&amp;rsquo;s write some code to do that.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModelBuilderExtensions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> SetQueryFilter&amp;lt;TEntity, TEntityInterface&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span> ModelBuilder builder,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expression&amp;lt;Func&amp;lt;TEntityInterface, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; filterExpression)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">where&lt;/span> TEntityInterface : &lt;span style="color:#66d9ef">class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">where&lt;/span> TEntity : class, TEntityInterface
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> concreteExpression = filterExpression
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Convert&amp;lt;TEntityInterface, TEntity&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builder.Entity&amp;lt;TEntity&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .HasQueryFilter(concreteExpression);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// More code to follow...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So what this method does is take in our interface based expression and convert it to an expression for the entity type. We could in theory call it like this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>builder.SetQueryFilter&amp;lt;Post, ISoftDeletable&amp;gt;(p =&amp;gt; p.IsDeleted);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But we have one problem, here&amp;rsquo;s the code to retrieve every entity type.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> type &lt;span style="color:#66d9ef">in&lt;/span> builder.Model.GetEntityTypes()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Select(t =&amp;gt; t.ClrType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(t =&amp;gt; &lt;span style="color:#66d9ef">typeof&lt;/span>(TEntityInterface).IsAssignableFrom(t)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// What do we do? This method requires a type known at compile time.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builder.SetQueryFilter&amp;lt;type, ISoftDeletable&amp;gt;(p =&amp;gt; p.IsDeleted)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Do you see the problem?&lt;/p>
&lt;p>Yes, this won&amp;rsquo;t compile because &lt;code>SetQueryFilter&lt;/code> is a generic method. It expects a known type at compile time. We can&amp;rsquo;t pass in &lt;code>type&lt;/code> as part of the generic signature.&lt;/p>
&lt;p>Reflection to the rescue!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">readonly&lt;/span> MethodInfo SetQueryFilterMethod = &lt;span style="color:#66d9ef">typeof&lt;/span>(ModelBuilderExtensions)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .GetMethods(BindingFlags.NonPublic | BindingFlags.Static)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Single(t =&amp;gt; t.IsGenericMethod &amp;amp;&amp;amp; t.Name == nameof(SetQueryFilter));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We set up a &lt;code>MethodInfo&lt;/code> instance so we can invoke &lt;code>SetQueryFilter&lt;/code> dynamically. Here&amp;rsquo;s a helper method to do that.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> SetEntityQueryFilter&amp;lt;TEntityInterface&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span> ModelBuilder builder,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type entityType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expression&amp;lt;Func&amp;lt;TEntityInterface, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; filterExpression)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SetQueryFilterMethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .MakeGenericMethod(entityType, &lt;span style="color:#66d9ef">typeof&lt;/span>(TEntityInterface))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Invoke(&lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span>[] { builder, filterExpression });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This method now lets us pass in an entity type at runtime. So we can do this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> type = &lt;span style="color:#66d9ef">typeof&lt;/span>(Post);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.SetEntityQueryFilter&amp;lt;ISoftDeletable&amp;gt;(type, p =&amp;gt; p.IsDeleted);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we just need one more method to apply this filter on every entity type that implements our interface.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> SetQueryFilterOnAllEntities&amp;lt;TEntityInterface&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span> ModelBuilder builder,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expression&amp;lt;Func&amp;lt;TEntityInterface, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; filterExpression)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> type &lt;span style="color:#66d9ef">in&lt;/span> builder.Model.GetEntityTypes()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(t =&amp;gt; t.BaseType == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Select(t =&amp;gt; t.ClrType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(t =&amp;gt; &lt;span style="color:#66d9ef">typeof&lt;/span>(TEntityInterface).IsAssignableFrom(t)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builder.SetEntityQueryFilter&amp;lt;TEntityInterface&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filterExpression);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the &lt;code>.Where(t =&amp;gt; t.BaseType == null)&lt;/code> clause here. Query filters may only be applied to the root entity type of an inheritance hierarchy. This clause ensures we don&amp;rsquo;t try to apply a filter on a non-root type.&lt;/p>
&lt;p>And going back to our &lt;code>DbContext&lt;/code> derived class, we can invoke this method like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnModelCreating(ModelBuilder builder)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modelBuilder.SetQueryFilterOnAllEntities&amp;lt;ISoftDeletable&amp;gt;(p =&amp;gt; !p.IsDeleted);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//... Probably more code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">```&lt;/span>csharp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> AppendQueryFilter&amp;lt;T&amp;gt;(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span> EntityTypeBuilder&amp;lt;T&amp;gt; entityTypeBuilder, Expression&amp;lt;Func&amp;lt;T, &lt;span style="color:#66d9ef">bool&lt;/span>&amp;gt;&amp;gt; expression)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">where&lt;/span> T : &lt;span style="color:#66d9ef">class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> parameterType = Expression.Parameter(entityTypeBuilder.Metadata.ClrType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> expressionFilter = ReplacingExpressionVisitor.Replace(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expression.Parameters.Single(), parameterType, expression.Body);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (entityTypeBuilder.Metadata.GetQueryFilter() != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> currentQueryFilter = entityTypeBuilder.Metadata.GetQueryFilter();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> currentExpressionFilter = ReplacingExpressionVisitor.Replace(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> currentQueryFilter.Parameters.Single(), parameterType, currentQueryFilter.Body);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expressionFilter = Expression.AndAlso(currentExpressionFilter, expressionFilter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> lambdaExpression = Expression.Lambda(expressionFilter, parameterType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> entityTypeBuilder.HasQueryFilter(lambdaExpression);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Lets start Windows 8 Development</title><link>https://shayananique.com/posts/2012-09-09-lets-start-windows-8-development/</link><pubDate>Sun, 09 Sep 2012 01:34:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-09-09-lets-start-windows-8-development/</guid><description>So, I am digging in to Windows 8 Development since the last //BUILD Conference, Yup! That’s true I am hacking around Windows 8 story since the first Developer Preview version come out, Now I am running Windows 8 Pro (RTM) on my All machines because I am in love with it. Currently, I am porting my Matchem Poker game and Sound Recorder application for Windows Phone to Windows 8. I am using a smart program called “MonoGame”.</description><content>&lt;p>So, I am digging in to Windows 8 Development since the last //BUILD Conference, Yup! That’s true I am hacking around Windows 8 story since the first Developer Preview version come out, Now I am running Windows 8 Pro (RTM) on my All machines because I am in love with it. Currently, I am porting my &lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">Matchem Poker&lt;/a> game and &lt;a href="http://www.windowsphone.com/en-GB/apps/6dbd2538-0df6-4231-8ae9-62ea18108c8c">Sound Recorder&lt;/a> application for Windows Phone to Windows 8. I am using a smart program called “MonoGame”. It is a program which you can use to port your XNA Windows Phone Game to Windows 8 &lt;!-- raw HTML omitted -->Metro&lt;!-- raw HTML omitted -->.&lt;/p>
&lt;p>I will post my full porting story to my Blog Soon.&lt;/p>
&lt;p>&lt;strong>&lt;!-- raw HTML omitted -->Basics&lt;!-- raw HTML omitted -->&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://bit.ly/win8devgear">&lt;strong>Download Windows 8 RTM and Visual Studio 2012&lt;/strong>&lt;/a> – in this scenario, you will download an install Windows 8 on your machine (or a VM), and run it as your operating system.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://bit.ly/32Launch">30 To Launch&lt;/a>&lt;/strong> – Your App.  Your Idea.  In 30 Days.  Microsoft has set up an amazing program for aspiring app developers to not only keep their app motivation going, but also to help you make your app &lt;strong>awesome&lt;/strong>.  Design consultations, tech reviews, and expert help in Microsoft App Excellence Labs.&lt;/p>
&lt;p>&lt;strong>&lt;!-- raw HTML omitted -->Resources to Learn From&lt;!-- raw HTML omitted -->&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://bit.ly/win8samples">&lt;strong>Windows 8 Code Samples&lt;/strong>&lt;/a> – a huge array of Windows 8 sample code for almost everything you can think to do in a Win8 app.  Most of the samples include code using C#, Javascript, C++, or Visual Basic.  &lt;a href="http://bit.ly/win8sampledownload">You can also download the entire set here&lt;/a>.&lt;/p>
&lt;p>&lt;a href="http://bit.ly/win8RCdevcamp">&lt;strong>Windows 8 Dev Camp in a Box&lt;/strong>&lt;/a> – a huge pile of presentations, sample code, and hands-on labs for you to use as you start learning about Windows 8 development.&lt;/p>
&lt;p> &lt;/p>
&lt;p>&lt;strong>Cool Stuff to Checkout&lt;/strong>&lt;/p>
&lt;h4 id="span-stylefont-size-smallwindows-8-productivity-who-moved-my-cheese-oh-there-it-isspanhttpwwwhanselmancomblogwindows8productivitywhomovedmycheeseohthereitisaspx">&lt;a href="http://www.hanselman.com/blog/Windows8ProductivityWhoMovedMyCheeseOhThereItIs.aspx">&lt;!-- raw HTML omitted -->Windows 8 productivity: Who moved my cheese? Oh, there it is.&lt;!-- raw HTML omitted -->&lt;/a>&lt;/h4>
&lt;h3 id="span-stylefont-size-smalla-hrefhttpcompositecodecom20120816html-css-javascript-and-metro-app-building-on-windows-8-part-1html-css-javascript-and-metro-app-building-on-windows-8-part-1aspan">&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->HTML, CSS, JavaScript and Metro App Building on Windows 8 Part 1&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/h3>
&lt;p>&lt;strong>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Getting Started with Windows 8 Development?&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/strong>&lt;/p></content></item><item><title>Awesome Feature: Hyper Virtualization</title><link>https://shayananique.com/posts/2012-08-30-awesome-feature-hyper-virtualization/</link><pubDate>Thu, 30 Aug 2012 13:51:11 +0000</pubDate><guid>https://shayananique.com/posts/2012-08-30-awesome-feature-hyper-virtualization/</guid><description>The major thing which attracted me to upgrade all of my Machine to Windows 8 Pro is Hyper V (Hyper Virtualization). I mostly run couple of Windows 7 VMs and Windows 8 VMs to test and debug applications on it without harming my main Operating System.
You can add Hyper V feature to your Windows 8, It is only supported in Enterprise and Professional Version of Windows 8.
Simply go to Control Panel and Click on “Program and Features”</description><content>&lt;p>The major thing which attracted me to upgrade all of my Machine to Windows 8 Pro is Hyper V (Hyper Virtualization). I mostly run couple of Windows 7 VMs and Windows 8 VMs to test and debug applications on it without harming my main Operating System.&lt;/p>
&lt;p>&lt;strong>You can add Hyper V feature to your Windows 8, It is only supported in Enterprise and Professional Version of Windows 8.&lt;/strong>&lt;/p>
&lt;p>&lt;em>Simply go to Control Panel and Click on “Program and Features”&lt;/em>&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/08/AddFeature1.png">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>In Programs and features simply hover over to left side on “Turn Windows Features On or Off” and than Click on Hyper-V and “press OK”.&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/08/AddFeature2.png">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>Now Windows will install that feature so be Patient!. When installation is complete Restart your PC and enjoy Hyper Virtualization on your Windows 8 Pro or Enterprise Machine.&lt;/p></content></item><item><title>Office 2013 Consumer Preview Released, Metro, Metro, Metro, Everywhere</title><link>https://shayananique.com/posts/2012-07-18-office-2013-consumer-preview-released-metro-metro-metro-everywhere/</link><pubDate>Wed, 18 Jul 2012 00:16:24 +0000</pubDate><guid>https://shayananique.com/posts/2012-07-18-office-2013-consumer-preview-released-metro-metro-metro-everywhere/</guid><description>As I mentioned on my tweet earlier Microsoft Released Consumer Preview of their new and Shiny Office 2013.
As we all are office geek we use it on daily basis for documents, spreadsheets, presentation and so on.
This year Microsoft done something different revising their own UI they added Metro in it like Windows 8 since there as no specific download and licenses for Microsoft Office 2013 you can download the beta version which is in modern world called as Consumer Previews to test what Microsoft is actually doing with their products.</description><content>&lt;p>As I mentioned on my tweet earlier Microsoft Released Consumer Preview of their new and Shiny &lt;a href="http://www.microsoft.com/office/preview/">Office 2013&lt;/a>.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>As we all are office geek we use it on daily basis for documents, spreadsheets, presentation and so on.&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/07/office2013icons.png">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>This year Microsoft done something different revising their own UI they added Metro in it like Windows 8 since there as no specific download and licenses for Microsoft Office 2013 you can download the beta version which is in modern world called as Consumer Previews to test what Microsoft is actually doing with their products. One thing Skydrive is fully integrated with Office 2013 like Windows 8 which is a good thing because if any disaster happens with us our important documents and files will be save and when it rains we can see it&lt;!-- raw HTML omitted --> I am kidding.&lt;/p>
&lt;p>Perhaps the biggest change to Office 2013 isn’t the way it looks or its features, but rather the way documents are delivered along with some important under-the-hood changes. Microsoft is really pushing the ability to create a Word document on a Windows PC and edit it on a Windows Phone, Windows 8 tablet, or any Windows 7- or Windows 8-based PC with an internet connection. Home users can store documents in Microsoft’s SkyDrive cloud storage and businesses can use a range of the company’s SharePoint offerings. Office 2013’s big innovation is its ability to let users stream a full-featured version of Office to a PC with personal settings intact — an on-demand Office suite whenever you require it. This is a big step from previous versions of Office that included cloud-based storage options, but never really tied them together into one neat package.&lt;/p>
&lt;p>Office on demand is a powerful aspect to Microsoft’s Office 2013 subscription offering, providing a way to access a full version of Office wherever you are. The service lets you stream a full-featured Office application to any internet-connected PC running Windows 7 and Windows 8, providing access to the settings and documents you use regularly. Simply put, you can sign in to a streaming version of Office at a friend’s PC and finish a document; the app will then be removed from the PC once it’s closed. This all requires an Office 365 Home Premium subscription, but its ease-of-use makes it a compelling prospect for users who are comfortable using Microsoft’s Office suite and require more document editing functionality than Google Docs or Microsoft’s own Office Web Apps provide. Despite this, you can still opt to simply buy a standalone version of the Office 2013 desktop software and utilize SkyDrive as an online storage hub for documents. You won’t get the streaming Office 2013 apps, but you’ll benefit from the cloud and avoid having to pay a subscription fee.&lt;/p>
&lt;p>&lt;a href="http://www.microsoft.com/office/preview/">So Keep enjoy the preview of Microsoft Office 2013.&lt;/a>&lt;/p></content></item><item><title>Windows Phone 8 Announced</title><link>https://shayananique.com/posts/2012-06-20-windows-phone-8-announced-big-roll-up-in-the-tech-industry/</link><pubDate>Wed, 20 Jun 2012 04:57:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-06-20-windows-phone-8-announced-big-roll-up-in-the-tech-industry/</guid><description>Today at Windows Phone Summit Microsoft announced there upcoming version of Windows Phone known as Windows Phone 8 Codename “Apollo”. This OS will be successor to previous Windows Phone 7 series as it contains biggest improvements that everybody wanted. The Windows Phone 8 announcement was aimed largely at Microsoft’s ecosystem of developers and hardware partners, and somewhat at potential enterprise customers, more so than at smartphone consumers. While the company’s executives revealed several end-user and consumer features–like the Wallet Hub, a new Start screen, upgraded hardware support (including support for NFC)–the major news revolved around the operating system’s revamped kernel, which it now shares as common code with Windows 8.</description><content>&lt;p>Today at Windows Phone Summit Microsoft announced there upcoming version of Windows Phone known as Windows Phone 8 Codename “Apollo”. This OS will be successor to previous Windows Phone 7 series as it contains biggest improvements that everybody wanted. The Windows Phone 8 announcement was aimed largely at Microsoft’s ecosystem of developers and hardware partners, and somewhat at potential enterprise customers, more so than at smartphone consumers. While the company’s executives revealed several end-user and consumer features–like the Wallet Hub, a new Start screen, upgraded hardware support (including support for NFC)–the major news revolved around the operating system’s revamped kernel, which it now shares as common code with Windows 8.&lt;/p>
&lt;p>They added some new features like SD Card Support, Near Field Communication Sensor “NFC” Developers can make applications and games which depends upon native code.&lt;/p>
&lt;p>Here’s some shots of Windows Phone 8&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;!-- raw HTML omitted -->Developers will be able to download Windows Phone 8 SDK at this summer.&lt;!-- raw HTML omitted -->&lt;/p></content></item><item><title>UX Guidelines For Metro App Development</title><link>https://shayananique.com/posts/2012-05-03-ux-guidelines-for-metro-app-development/</link><pubDate>Thu, 03 May 2012 11:03:14 +0000</pubDate><guid>https://shayananique.com/posts/2012-05-03-ux-guidelines-for-metro-app-development/</guid><description>The Windows Developer Preview introduces a new development platform for creating Metro style apps. What is a Metro style app you say?
“Metro style apps are full screen apps tailored to your users’ needs, tailored to the device they run on, tailored for touch interaction, and tailored to the Windows user interface. Windows helps you interact with your users, and your users interact with your app.”
One of my friend asked me where one could find Design Guidelines for Windows 8 Metro apps.</description><content>&lt;p>The Windows Developer Preview introduces a new development platform for creating Metro style apps. What is a Metro style app you say?&lt;/p>
&lt;p>“Metro style apps are full screen apps tailored to your users’ needs, tailored to the device they run on, tailored for touch interaction, and tailored to the Windows user interface. Windows helps you interact with your users, and your users interact with your app.”&lt;/p>
&lt;p>One of my friend asked me where one could find Design Guidelines for Windows 8 Metro apps. Bonny Lau, from the Windows team, shared a terrific link to the new &lt;a href="http://msdn.microsoft.com/en-us/windows/apps/">Windows Dev Center&lt;/a>, outlining comprehensive guidelines from planning to building your Metro style app. These guidelines also cover new UI lingo (app bar, charms bar, snap view, etc.), animations, and more.&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/05/semanticzoom-bc1.png">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>Sources –&amp;gt; &lt;a href="http://blendinsider.com/technical/ux-guidelines-for-metro-style-app-development-2011-10-21/">Blend Insider&lt;/a>&lt;/p></content></item><item><title>Silverlight Technology in Web Application Development</title><link>https://shayananique.com/posts/2012-04-22-silverlight-technology-in-web-application-development/</link><pubDate>Sun, 22 Apr 2012 14:48:19 +0000</pubDate><guid>https://shayananique.com/posts/2012-04-22-silverlight-technology-in-web-application-development/</guid><description>Microsoft Silverlight is the realization of the .NET Framework supported by various browsers and platforms and intended for .Net software developers to create and present multimedia and RIA applications of the new generation in the Internet. Silverlightcombines the possibilities of the server, the Internet and the personal computer; the possibilities of the control code and dynamic languages, declarative and traditional programming as well as powerful tools of Windows Presentation Foundation (WPF).</description><content>&lt;p>Microsoft &lt;strong>Silverlight&lt;/strong> is the realization of the .NET Framework supported by various browsers and platforms and intended for &lt;a href="http://www.netsoftwaredevelopment.com/">.Net software developers&lt;/a> to create and present multimedia and &lt;a href="http://en.wikipedia.org/wiki/Rich_Internet_application">RIA applications&lt;/a> of the new generation in the Internet. &lt;strong>Silverlight&lt;/strong>combines the possibilities of the server, the Internet and the personal computer; the possibilities of the control code and dynamic languages, declarative and traditional programming as well as powerful tools of Windows Presentation Foundation (WPF).&lt;/p>
&lt;p>&lt;strong>Silverlight&lt;/strong>allows .Net software developers to create ultramodern applications that include the following features:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Silverlight&lt;/strong>technology is supported by various browsers and platforms such as Microsoft Internet Explorer, Mozilla Firefox, Apple Safari and Google Chrome as well Microsoft Windows OS and Apple Mac OS X.&lt;/li>
&lt;li>&lt;strong>Silverlight&lt;/strong>download and installation will take a few seconds.&lt;/li>
&lt;li>&lt;strong>Silverlight&lt;/strong>performs video and audio streaming and provides opportunities for scaling the video quality: from mobile device and PC browsers to video modes 720p for high definition television.&lt;/li>
&lt;li>&lt;strong>Silverlight&lt;/strong>also has stylish graphics that can be managed by users — drag, rotate and scale — directly in the browser.&lt;/li>
&lt;li>&lt;strong>Silverlight&lt;/strong> counts data and updates the displayed content but doesn’t interrupt the user’s work while updating the whole page.&lt;/li>
&lt;li>Applications developed with &lt;strong>Silverlight&lt;/strong> can be launched in web browsers or can be adjusted so as users can launch them on their PCs, outside the browser.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://en.wikipedia.org/wiki/Web_application_development">Web application developers&lt;/a> and graphics designers can develop &lt;strong>Silverlight&lt;/strong> applications in many ways.&lt;strong>Silverlight&lt;/strong> can be used for developing multimedia and graphics and for working separately using dynamic languages and the control code. &lt;strong>Silverlight&lt;/strong> also allows using the high professional tools such as Visual Studio for writing the code and Microsoft Expression Blend for creating models and graphical design.&lt;/p>
&lt;p>Sources –&amp;gt; &lt;a href="http://www.oxagile.com/article/183-silverlight-technology-web-application-development">Oxagile&lt;/a>&lt;/p></content></item><item><title>The problem with metro is it’s hard to differentiate</title><link>https://shayananique.com/posts/2012-04-05-the-problem-with-metro-is-its-hard-to-differentiate/</link><pubDate>Thu, 05 Apr 2012 16:58:14 +0000</pubDate><guid>https://shayananique.com/posts/2012-04-05-the-problem-with-metro-is-its-hard-to-differentiate/</guid><description>want you all to pause a moment or two.
I want you all to sit in front of Windows 8, and explore it some more and get to be intimate with “metro” as a user interface style. Really, immerse yourself in it and just stare at it, explore every pixel it offers up.
I now want you to imagine that this is going to be your user interface for the next 5 years.</description><content>&lt;p>want you all to pause a moment or two.&lt;/p>
&lt;p>I want you all to sit in front of Windows 8, and explore it some more and get to be intimate with “metro” as a user interface style. Really, immerse yourself in it and just stare at it, explore every pixel it offers up.&lt;/p>
&lt;p>I now want you to imagine that this is going to be your user interface for the next 5 years.&lt;/p>
&lt;p>&lt;strong>Still onboard?&lt;/strong>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>I have been doing “metro” rinse/repeat designs for quite some time and it has long past bored me to the point where I wonder if I have metro-blindness now. That is I’ve stared at it for far to long that I really need a release valve, I crave something more interesting and has more depth.&lt;/p>
&lt;p>This is the part where you respond with the usual metro rhetoric about content-first design, authentically digital blah blah the usual Microsoft Metro Zombie response that often the person at the other end of the conversation has no clue at what even it means, it just sounds smart to say and gives one a sense of authority over the conversation.&lt;/p>
&lt;p>I am not saying the path that Microsoft has put the hordes of developers on is wrong but I’m not inclined to say it’s right either.&lt;/p>
&lt;h3 id="span-stylefont-weight-boldwho-is-the-target-audiencespan">&lt;!-- raw HTML omitted -->Who is the target audience?&lt;!-- raw HTML omitted -->&lt;/h3>
&lt;p>Today, a 50 something non-techy came into my work pod to talk about the new iPad 3, we talked about what it has and doesn’t have but then I tried to get an unbiased non-technical opinion on Windows 8.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>Me: “Have you seen the new Windows 8 yet?”&lt;/em>&lt;/p>
&lt;p>&lt;em>NonTechGuy: “Nope.. is it out?”&lt;/em>&lt;/p>
&lt;p>&lt;em>Me: “Not yet, it’s still in beta, but here have a look”&lt;/em>&lt;/p>
&lt;p>&lt;em>I then watched his facial expression; it looked like he wanted to go to the toilet but was holding back on saying so out of politeness.&lt;/em>&lt;/p>
&lt;p>&lt;em>Me: “Cool huh!”&lt;/em>&lt;/p>
&lt;p>&lt;em>NonTechGuy: “is that the whole thing?”&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Bottom line was that he was not excited by it and we soon retreated to the iPad conversation. My thinking here is not that well this user speaks for billions of humans worldwide; it was just interesting to see a virgin reaction to basically metro.&lt;/p>
&lt;p>This person uses Windows daily and has no issue with it, but when shown Windows 8 front-start screen it had this jarring effect on his senses, as if to say – “&lt;em>this is not what I expected&lt;/em>”.&lt;/p>
&lt;p>This is the part where someone now responds with “&lt;em>give them time&lt;/em>”, “&lt;em>users over time will get used to it&lt;/em>”, “&lt;em>I have xyz friends who see the opposite to this view&lt;/em>” etc. etc.&lt;/p>
&lt;p>I get it, I just disagree with it.&lt;/p>
&lt;p>Windows 8 is targeted at us, the tech crowd, the more I think about its practicality the more I contemplate that maybe the reason why Apple is much more successful than Microsoft at this space as they target the baby-boomer style crowd. Microsoft and Google target us and in turn they fail more than they succeed simply because we are much harder to please than the Apple audience.&lt;/p>
&lt;p>When Steve Jobs said that they only make products that they would want to use, I think we all in the tech-scene assumed he meant us. He didn’t, I think he meant to say “no, I mean guys my age and people who aren’t preoccupied with engadget/gizmodo style blogs.. I mean me, you people aren’t invited”&lt;/p>
&lt;p>The thing that struck a chord today was the fact that iPad3 has failed in the eyes of most tech bloggers etc., yet 50-something non-tech guy walks into the IT cubicle and asks “Hey, you seen the new iPad!”..&lt;/p>
&lt;p>Think about that a bit more. Firstly, he has already heard about it from mainstream radio stations and secondly he did not say iPad3 he said “new iPad” (interesting choice of words to parrot).&lt;/p></content></item><item><title>TCP-based sockets on Windows Phone with support for large amounts of data</title><link>https://shayananique.com/posts/2012-03-25-tcp-based-sockets-on-windows-phone-with-support-for-large-amounts-of-data/</link><pubDate>Sun, 25 Mar 2012 21:49:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-03-25-tcp-based-sockets-on-windows-phone-with-support-for-large-amounts-of-data/</guid><description>Network communication through sockets is a welcome addition to the Windows Phone platform. Personally, I enjoy using those because of the tremendous performance gain compared to WCF services. One topic, however, seems to be rarely covered when it comes to TCP-based communication between the server (presumably running on a desktop machine) and the client (Windows Phone) = transmission of large amounts of data.
A lot of existing samples assume that the communication, although bi-directional, is done with small data units.</description><content>&lt;p>Network communication through sockets is a welcome addition to the Windows Phone platform. Personally, I enjoy using those because of the tremendous performance gain compared to WCF services. One topic, however, seems to be rarely covered when it comes to TCP-based communication between the server (presumably running on a desktop machine) and the client (Windows Phone) = transmission of large amounts of data.&lt;/p>
&lt;p>A lot of existing samples assume that the communication, although bi-directional, is done with small data units. For example, &lt;a href="http://msdn.microsoft.com/en-us/library/5w7b7x5f.aspx">here is a pretty good sample&lt;/a> that I used to build the asynchronous server. The reading callback looks like this:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>It works perfectly fine on the desktop machine. I am also adding a terminator verification statement that allows me to check whether the whole data set was received:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Although seemingly simple, the data receiving process on a Windows Phone is handled in a different manner. There is no direct implementation of&lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.beginreceive.aspx">Socket.BeginReceive&lt;/a>. Instead, developers work with &lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.receiveasync(v=vs.95).aspx">Socket.ReceiveAsync&lt;/a>. Many samples give you this piece of code:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Notice the problem with this snippet. Once the string is received, that will be it. The inbound data length will be limited to the size of the buffer, and the maximum chunk size. The buffer size cannot always be fixed, and it is safe to assume that the developer does not want to allocate too much space for that in one iteration. The default socket chuck size cannot always be accommodated either.&lt;/p>
&lt;p>The resolution comes in a continuous invocation of &lt;a href="http://msdn.microsoft.com/en-us/library/system.net.sockets.socket.receiveasync(v=vs.95).aspx">Socket.ReceiveAsync&lt;/a>:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Here is where the terminator character plays a major role. Look at** &lt;em>if (dataFromServer.EndsWith(terminator)) –&lt;/em>** that is the flag that shows whether more data is coming or not. With a receiving structure like I showed above, it is possible to keep receiving data until the connection is closed (happens all the time) or the terminator character is detected.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>NOTE:&lt;/strong> If you are wondering what terminator character to use, try going with non-standard ones. For example, &lt;em>&lt;strong>\u00BE&lt;/strong>.&lt;/em> Otherwise, chances are that the actual “terminator” is not the terminating character.&lt;/p>
&lt;/blockquote></content></item><item><title>I Just Downloaded Visual Studio 11 Beta To Give It a Try</title><link>https://shayananique.com/posts/2012-03-11-just-downloaded-visual-studio-11-beta-to-give-it-a-try/</link><pubDate>Sun, 11 Mar 2012 21:45:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-03-11-just-downloaded-visual-studio-11-beta-to-give-it-a-try/</guid><description>Microsoft has released betas of its various Visual Studio 11 editions – Ultimate, Premium, Professional, Test Professional and Express – along with Team Foundation Server and the .NET Framework 4.5.
And of course it’s no coincidence that the latest version of the IDE has arrived on the same day as the Windows 8 Consumer Preview. Visual Studio is all about developing for Windows 8, and its integrated tools for publishing directly to the new Windows App Store will make it much easier for developers to reach a potentially huge market.</description><content>&lt;p>Microsoft has released betas of its various Visual Studio 11 editions – Ultimate, Premium, Professional, Test Professional and Express – along with Team Foundation Server and the .NET Framework 4.5.&lt;/p>
&lt;p>And of course it’s no coincidence that the latest version of the IDE has arrived on the same day as the Windows 8 Consumer Preview. Visual Studio is all about developing for Windows 8, and its integrated tools for publishing directly to the new Windows App Store will make it much easier for developers to reach a potentially huge market.&lt;/p>
&lt;p>The change you’ll notice first is what Microsoft call Visual Studio’s “minimalist” interface. Colour has been largely stripped out, toolbars removed or refined in an attempt to reduce distractions within the IDE and free up more workspace for browsing your code. Meanwhile you can now browse code directly from the Solution Explorer, helping to further reduce on-screen clutter as you’re less likely to need to open additional windows.&lt;/p>
&lt;p>Productivity improvements include the ability to pin frequently used files to the left side of the tab well for easier access. You can now preview files directly from the code editor; the new Quick Launch feature helps you locate commands, open Options dialog boxes or switch between open documents; and there’s enhanced support for multi-monitor setups (you can now float multiple windows together from one monitor to another, and bring them back with a key press, for instance).&lt;/p>
&lt;p>And elsewhere you’ll find a stack of code editor improvements, new language features, simplified debugging, new 2 and 3D graphics development tools, and the list goes on.&lt;/p>
&lt;p>If you’d like to sample all this for yourself then the simplest solution is download the high-end Ultimate Edition ISO file. And the good news is that you can install and run this alongside Visual Studio 2010. Although whether you want to do that is open to question, as the setup process will carry out an in-place upgrade from .NET 4 to .NET 4.5. Microsoft claim it “provides very high app compatibility for all .NET 4 scenarios”, but that doesn’t mean you won’t have problems, although you can at least uninstall it if things go wrong.&lt;/p>
&lt;p>If you’re looking for one of the other editions, though, Premium, Professional and Test Professional are available from the &lt;a href="http://www.microsoft.com/visualstudio/11/en-us/downloads#vs">Microsoft site&lt;/a>, along with &lt;a href="http://www.microsoft.com/visualstudio/11/en-us/downloads#groups">Team Foundation Server&lt;/a>, various &lt;a href="http://www.microsoft.com/visualstudio/11/en-us/downloads#groups">Visual Studio Express&lt;/a> editions and &lt;a href="http://www.microsoft.com/visualstudio/11/en-us/downloads#groups">assorted standalone installers&lt;/a>: .NET 4.5, the Visual Studio SDK and so on).&lt;/p></content></item><item><title>Matchem Poker: A Great Poker Game For Your Windows Phone</title><link>https://shayananique.com/posts/2012-01-04-matchem-poker-a-great-poker-game-for-your-windows-phone-2/</link><pubDate>Wed, 04 Jan 2012 22:58:00 +0000</pubDate><guid>https://shayananique.com/posts/2012-01-04-matchem-poker-a-great-poker-game-for-your-windows-phone-2/</guid><description>I am pleased to announce that my game is called “Match`em Poker”. It is a poker game for Windows Phone 7.5 Codename: Mango and it is now available for free on Windows Phone Market Place. I hope to share a lot of my exciting developing experience on this blog.
On top of being a fully functional, free poker game, I’ve also made sure to address key complaints That I heard from people regarding the previous poker and cards game on market place: the main function of the game, that is general touch responsiveness than any other game present on Market Place.</description><content>&lt;p>I am pleased to announce that my game is called “&lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">Match`em Poker&lt;/a>”. It is a poker game for Windows Phone 7.5 Codename: Mango and it is now available for free on Windows Phone Market Place. I hope to share a lot of my exciting developing experience on this blog.&lt;/p>
&lt;p>On top of being a fully functional, free poker game, I’ve also made sure to address key complaints That I heard from people regarding the previous poker and cards game on market place: the main function of the game, that is general touch responsiveness than any other game present on Market Place.&lt;/p>
&lt;hr>
&lt;hr>
&lt;p>&lt;strong>&lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image002.jpg">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/strong>****&lt;/p>
&lt;p>&lt;strong>“Match`em Poker”&lt;/strong>&lt;/p>
&lt;p>So, my Game is called &lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">Matchem Poker&lt;/a>. Instead of focusing on just raw performance from a development&lt;/p>
&lt;p>standpoint, I wanted to show how I would envision a great Windows Phone Game. I believe that for a v1.0. release, I have delivered a great initial app experience. I decided to try and demonstrate a happy compromise, hoping to yield a wonderful experience that doesn’t take short-cuts.&lt;/p>
&lt;p>· Touch Responsive&lt;/p>
&lt;p>· Great Performance&lt;/p>
&lt;p>· Improved Gestures&lt;/p>
&lt;p>· A Beautiful Experience, yet differentiated enough&lt;/p>
&lt;p>· A emphasis on Design&lt;/p>
&lt;p>(The name? It’s a little odd yet creative. The intersection of poker (Matchem) and the fun of the game This means to match the poker hands).&lt;/p>
&lt;p>An emphasis on design and rich Visuals The design system for Windows Phone, code-named “Metro”, really is cool. Others have written about the experience before, but it really is a very developer-friendly design system that is crisp, clean, and once you understand the core principles and rules, it’s easy to build jaw-dropping apps. I’m just a geek, but feel I’ve come away with a pretty good first release when it comes to visual consistency and trying to adhere to the basics of “Metro”. This comes through in a few ways. If you look to the screenshots below, on the left, you see the nice visuals in the “Start” listing: no rounded corners, crisp and clean, etc. On the right, the “info” item for a page shows a few large, rich photos from the venue – and clicking them brings up the fullscreen experience.&lt;/p>
&lt;p>&lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image004.jpg">&lt;!-- raw HTML omitted -->&lt;/a>                                             &lt;a href="http://shayananique.com/wp-content/uploads/2012/07/clip_image006.jpg">&lt;!-- raw HTML omitted -->&lt;/a>&lt;/p>
&lt;p>&lt;strong>A fun experience&lt;/strong>&lt;/p>
&lt;p>While Playing the Game the feature you get is that on every level you will get general information on Poker which is quite good.&lt;/p>
&lt;p>&lt;strong>An update with specials is coming soon&lt;/strong>&lt;/p>
&lt;p>Now that the app is out there, an update coming soon will add specials support, and I’ll also work to address any large buckets of customer-reported bugs. Thanks to getting the build out earlier in the week for people with developer unlocked phones, I’ve been able to start identifying a few small bugs and issues that I hope to correct soon (thanks everyone).&lt;/p>
&lt;hr>
&lt;p>&lt;strong>From a Blank Visual Studio Project…. &amp;lt;90 Days&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>I have created a visual studio project few months before purchasing my windows phone I have completed building and coding my game the thing which last is to test on actual windows phone 7 device the advantage of this is that you will not need to worry about any objection from Windows Phone Marketplace team you can review your and fix all the bugs you found during debugging on a device although, you can run it on emulator but many features would not work on it.&lt;/p>
&lt;p>Finally I got my windows phone (HTC HD 7) and I am very happy after that I registered a domain &lt;a href="http://www.shayananique.com">shayananique.com&lt;/a> and added everything about my game on my blog I have also previously mentioned about my Invasion (game for windows phone) on my blog.&lt;/p>
&lt;p>Most development happened in spurts as I found a free Sunday afternoon or a clear night or two. I’m Really glad that I was able to the have the opportunity to build a feature-complete WP app and that Microsoft is open to this kind of project as appropriate.&lt;/p>
&lt;p>So, check out the site and &lt;a href="http://www.windowsphone.com/en-GB/apps/081f188d-fe71-4015-b568-b4f1186bf039">download&lt;/a> the app from marketplace if you’re into Windows Phone&lt;/p></content></item><item><title>MPNS module for Node: A simple push notification helper for the cloud</title><link>https://shayananique.com/posts/2011-12-28-mpns-module-for-node-a-simple-push-notification-helper-for-the-cloud/</link><pubDate>Wed, 28 Dec 2011 08:32:13 +0000</pubDate><guid>https://shayananique.com/posts/2011-12-28-mpns-module-for-node-a-simple-push-notification-helper-for-the-cloud/</guid><description>One of the fun projects I’ve been working on recently related to my app has been bringing online a cloud to handle sending push notifications processing. I’m using Node.js for this and have a ton of people enjoying the beta push experience right now: toasts, live tiles, etc.
Tonight I pushed to GitHub ‘mpns’, a simple interface and helper to the Microsoft Push Notification Service (MPNS). It essentially takes the simple properties for your live tile update or toast, packages it in a simple XML payload, and then posts it to the subscription endpoint.</description><content>&lt;p>One of the fun projects I’ve been working on recently related to my app has been bringing online a cloud to handle sending push notifications processing. I’m using &lt;a href="http://nodejs.org/">Node.js&lt;/a> for this and have a ton of people enjoying the beta push experience right now: toasts, live tiles, etc.&lt;/p>
&lt;p>Tonight I pushed to GitHub ‘mpns’, a simple interface and helper to the Microsoft Push Notification Service (MPNS). It essentially takes the simple properties for your live tile update or toast, packages it in a simple XML payload, and then posts it to the subscription endpoint.&lt;/p>
&lt;p>It isn’t a lot of code, but I sure hope it helps others who may be experimenting with other platforms while building a great push experience. If you’re using Azure, the Windows Phone team has already provided some awesome content here – &lt;a href="http://windowsteamblog.com/windows_phone/b/wpdev/archive/2011/01/14/windows-push-notification-server-side-helper-library.aspx">Yochay has previously posted&lt;/a> about a &lt;a href="http://create.msdn.com/en-us/education/catalog/article/pnhelp-wp7">Windows Push Notification Server Side Helper Library&lt;/a>.&lt;/p></content></item><item><title>The Importance of Excel in the Work Place</title><link>https://shayananique.com/posts/2011-10-20-the-importance-of-excel-in-the-work-place/</link><pubDate>Thu, 20 Oct 2011 12:39:00 +0000</pubDate><guid>https://shayananique.com/posts/2011-10-20-the-importance-of-excel-in-the-work-place/</guid><description>Excel is perhaps the most important computer software program used in the workplace today. That’s why so many workers and prospective employees are required to learn Excel in order to enter or remain in the workplace.
From the viewpoint of the employer, particularly those in the field of information systems, the use of Excel as an end-user computing tool is essential. Not only are many business professionals using Excel to perform everyday functional tasks in the workplace, an increasing number of employers rely on Excel for decision support.</description><content>&lt;p>Excel is perhaps the most important computer software program used in the workplace today. That’s why so many workers and prospective employees are required to learn Excel in order to enter or remain in the workplace.&lt;/p>
&lt;p>From the viewpoint of the employer, particularly those in the field of information systems, the use of Excel as an end-user computing tool is essential. Not only are many business professionals using Excel to perform everyday functional tasks in the workplace, an increasing number of employers rely on Excel for decision support.&lt;/p>
&lt;p>In general, Excel dominates the spreadsheet product industry with a market share estimated at 90 percent. Excel 2007 has the capacity for spreadsheets of up to a million rows by 16,000 columns, enabling the user to import and work with massive amounts of data and achieve faster calculation performance than ever before.&lt;/p>
&lt;p>Outside the workplace, Excel is in broad use for everyday problem solving.&lt;/p>
&lt;p>Let’s say you have a home office. You can use Excel to calculate sales tax on a purchase, calculate the cost of a trip by car, create a temperature converter, calculate the price of pizza per square inch and do analysis of inputted data. You can track your debt, income and assets, determine your debt to income ratio, calculate your net worth, and use this information to prepare for the process of applying for a mortgage on a new house. The personal uses for Excel are almost as endless as the business uses for this software – and an Excel tutorial delves into the practical uses of the program for personal and business use.&lt;/p>
&lt;p>The use of spreadsheets on computers is not new. Spreadsheets, in electronic form, have been in existence since before the introduction of the personal computer. Forerunners to Excel and Lotus 1-2-3 were packages such as VisiCalc, developed and modeled on the accountant’s financial ledger. Since 1987, spreadsheet programs have been impacting the business world. Along the way, computerized spreadsheets have become a pervasive and increasingly effective tool for comparative data analysis throughout the world.&lt;/p>
&lt;p>Today, end users employ Excel to create and modify spreadsheets as well as to author web pages with links and complex formatting specifications. They create macros and scripts. While some of these programs are small, one-shot calculations, many are much more critical and affect significant financial decisions and business transactions.&lt;/p>
&lt;p>Widely used by businesses, service agencies, volunteer groups, private sector organizations, scientists, students, educators, trainers, researchers, journalists, accountants and others, Microsoft Excel has become a staple of end users and business professionals.&lt;/p>
&lt;p>The beauty of Excel is that it can be used as a receiver of workplace or business data, or as a calculator, a decision support tool, a data converter or even a display spreadsheet for information interpretation. Excel can create a chart or graph, operate in conjunction with Mail Merge functions, import data from the Internet, create a concept map and sequentially rank information by importance.&lt;/p>
&lt;p>Excel offers new data analysis and visualization tools that assist in analyzing information, spotting trends and accessing information more easily than in the past. Using conditional formatting with rich data display schemes, you can evaluate and illustrate important trends and highlight exceptions with colored gradients, data bars and icons.&lt;/p>
&lt;p>Indeed, Excel can be customized to perform such a wide variety of functions that many businesses can’t operate without it. Excel training has become mandatory in many workplaces; in fact, computer software training is a must for any workplace trying to keep up with the times.&lt;/p>
&lt;p>Let’s say you’re an employer with 97 workers, 17 of whom called in sick today, and you want to know the percentage represented by absentees. Excel can do that. You can learn Excel and use it to determine the ratio of male to female employees, the percentage of minorities on the payroll, and the ranking of each worker by compensation package amount, including the percentages of that package according to pay and benefits. You can use Excel to keep track of production by department, information that may assist you in future development plans. You can create additional spreadsheets to track data on vendors and customers while maintaining an ongoing inventory of product stock.&lt;/p>
&lt;p>Let’s say you want to know your business production versus cost. You don’t have to be a math wiz – you just have to learn Excel. Excel allows you to input all of the data, analyze it, sort it according to your customized format, and display the results with color, shading, backgrounds, icons and other gimmicks that offer time-saving assistance in later locating precisely the information desired. If this spreadsheet is for presentation purposes, Excel helps you put it together in such a visually appealing way that the data may seem to pop and sparkle.&lt;/p></content></item></channel></rss>